name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DB_SERVER_IP: localhost

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: actions-setup-mysql
      uses: shogo82148/actions-setup-mysql@v1.37.0
      with:
        mysql-version: '8.4'
        root-password: '${{ secrets.SQL_PASSWORD }}'

    - name: Create schema patrones-parcial1
      run: mysql -uroot -ppassword -e 'CREATE SCHEMA IF NOT EXISTS patrones_parcial1'

    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Store reports
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: reports
        path: |
          **/build/reports/
          **/build/test-results/

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate image tag
      run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

    - name: Build and Push Docker image
      run: |
        docker build . --file Dockerfile --tag ${{ vars.DOCKERHUB_USERNAME }}/patrones-parcial1-api:${{ env.IMAGE_TAG }}
        docker push ${{ vars.DOCKERHUB_USERNAME }}/patrones-parcial1-api -a

    - name: Clone deployment repository
      env:
        EXTERNAL_REPO: 'https://github.com/pipe1408/patrones-parcial1-manifests.git'
        BRANCH: 'main'
      run: |
        pwd
        mkdir /home/runner/work/patrones-parcial1-manifests
        git clone --single-branch --branch ${{ env.BRANCH }} ${{ env.EXTERNAL_REPO }} /home/runner/work/patrones-parcial1-manifests
        cd /home/runner/work/patrones-parcial1-manifests
        
    - name: yq - portable yaml processor
      uses: mikefarah/yq@v4.44.3

    - name: Modify K8S Manifest
      run: |
        cd /home/runner/work/patrones-parcial1-manifests
        yq eval ".spec.template.spec.containers[0].image = \"pipeba1408/patrones-parcial1-api:${{ env.IMAGE_TAG }}\"" -i api-deployment.yaml

    - name: Commit and Push Manifest
      env:
        REPO_KEY: ${{secrets.TOKEN}}
        USERNAME: pipe1408
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add --all
        git status
        git commit -m "Actualiza imagen a pipeba1408/patrones-parcial1-api:${{ env.IMAGE_TAG }}"
        git push https://$REPO_KEY@github.com/pipe1408/patrones-parcial1-manifests.git




  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
